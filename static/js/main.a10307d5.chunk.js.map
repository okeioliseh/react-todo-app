{"version":3,"sources":["components/AddTaskForm.js","components/Task.js","components/TaskList.js","components/Main.js","App.js","index.js"],"names":["AddTaskForm","props","useState","input","setInput","category","setCategory","cat","className","type","value","placeholder","onChange","event","inputValue","target","categoryVal","onClick","task","sendTask","Task","taskCategory","id","deleteTask","TaskList","state","setState","tasks","splice","console","log","localStorage","setItem","JSON","stringify","taskList","map","index","Main","setTasks","tasksObj","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAmDeA,EAjDK,SAACC,GACpB,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA+BF,mBAAS,eAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEIC,EAAMF,EAeV,OACC,qCACC,uBAAOG,UAAY,iBAAiBC,KAAO,OAAOC,MAASP,EAAOQ,YAAc,WAAWC,SAhBnE,SAACC,GAC1B,IAAIC,EAAaD,EAAME,OAAOL,MAC9BN,EAASU,MAeR,yBAAQJ,MAASL,EAAUO,SAZA,SAACC,GAC7B,IAAIG,EAAcH,EAAME,OAAOL,MAC/BJ,EAAYU,IAUkDR,UAAY,SAAzE,UACC,2CAIA,4CAIA,gDAIA,oDAMD,wBAAQA,UAAY,0BAA0BS,QA1BnC,SAACC,EAAKb,GAClBJ,EAAMkB,SAAShB,EAAMI,GACrBH,EAAS,KAwBR,iBAGA,2BCCYgB,EA7CF,SAACnB,GACb,MAA+BC,mBAASD,EAAMoB,cAA9C,mBAAOhB,EAAP,KAAgBC,EAAhB,KAWA,OACC,qCACC,qBAAIE,UAAY,YAAhB,UACC,wBAAQA,UAAY,uCAAuCS,QAR3C,SAACK,GACnBrB,EAAMsB,WAAWtB,EAAMqB,KAOrB,eAGA,uBAAOd,UAAY,WAAWC,KAAO,aAEpCR,EAAMiB,KACP,yBAASR,MAASL,EAAUI,KAAO,SAASD,UAAY,kBAAkBI,SAlBxD,SAACC,GACrBP,EAAYO,EAAME,OAAOL,QAiBvB,UACC,2CAIA,4CAIA,gDAIA,uDAKF,2BCXYc,EA3BE,SAACvB,GACjB,MAAyBC,oBAAS,GAAlC,mBAAOuB,EAAP,KAAaC,EAAb,KACIC,EAAQ1B,EAAM0B,MAGZJ,EAAa,SAACD,GACnBK,EAAMC,OAAON,EAAG,GAChBO,QAAQC,IAAI7B,GACZyB,GAAUD,GACVM,aAAaC,QAAQ,QAAQC,KAAKC,UAAUP,KAIzCQ,EAAWR,EAAMS,KAAI,SAAClB,EAAKmB,GAAN,OAAgB,cAAC,EAAD,CAAMd,WAAcA,EAA0BD,GAAMe,EAAOnB,KAAQA,EAAKA,KAAMG,aAAgBH,EAAKb,UAA5DgC,MAEhF,OACC,mCACC,qBAAK7B,UAAY,MAAjB,SACC,6BACE2B,SCkBSG,EAlCF,SAACrC,GAEb,MAAyBC,mBAAS,IAAlC,mBAAOyB,EAAP,KAAaY,EAAb,KAEIC,EAAW,GAoBd,OACC,mCACC,6CACA,cAAC,EAAD,CAAarB,SAtBI,SAACD,EAAKb,GACzB0B,aAAaC,QAAQ,QAAQQ,GAC1BtB,IACFsB,EAAW,CACV,CACCtB,KAAOA,EACPb,SAAWA,IAIbkC,EAAS,GAAD,mBAAKZ,GAAL,CAAWa,EAAS,UAa3B,cAAC,EAAD,CAAUb,MAASA,QCxBRc,MARf,WACE,OACE,qBAAKjC,UAAU,MAAf,SACE,cAAC,EAAD,OCCNkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a10307d5.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\n\r\nconst AddTaskForm = (props) =>{\r\n\tconst [input,setInput] = useState(\"\")\r\n\tconst [category,setCategory] = useState(\"Normal Task\")\r\n\r\n\tvar cat = category\r\n\tconst handleInputChange = (event) =>{\r\n\t\tvar inputValue = event.target.value\r\n\t\tsetInput(inputValue)\r\n\t}\r\n\r\n\tconst handleCategoryChange = (event) =>{\r\n\t\tvar categoryVal = event.target.value\r\n\t\tsetCategory(categoryVal)\r\n\t}\r\n\r\n\tconst send = (task,category) =>{\r\n\t\tprops.sendTask(input,cat)\r\n\t\tsetInput(\"\")\r\n\t}\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<input className = \"input is-small\" type = \"text\" value = {input} placeholder = \"Add Task\" onChange = {handleInputChange}/> \r\n\t\t\t<select value = {category} onChange = {handleCategoryChange} className = \"select\">\r\n\t\t\t\t<option>\r\n\t\t\t\t\tReact\r\n\t\t\t\t</option>\r\n\r\n\t\t\t\t<option>\r\n\t\t\t\t\tPython\r\n\t\t\t\t</option>\r\n\r\n\t\t\t\t<option>\r\n\t\t\t\t\tJavaScript\r\n\t\t\t\t</option>\r\n\r\n\t\t\t\t<option>\r\n\t\t\t\t\tNormal Task\r\n\t\t\t\t</option>\r\n\r\n\t\t\t</select>\r\n\r\n\t\t\t<button className = \"button is-info is-small\" onClick = {send}>\r\n\t\t\t\tAdd\r\n\t\t\t</button>\r\n\t\t\t<hr/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default AddTaskForm","import React,{ useState } from 'react'\r\n\r\nconst Task = (props) =>{\r\n\tconst [category,setCategory] = useState(props.taskCategory)\r\n\r\n\tconst handleChange = (event) =>{\r\n\t\tsetCategory(event.target.value)\r\n\t}\r\n\r\n\tconst deleteTask = (id)  =>{\r\n\t\tprops.deleteTask(props.id);\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<li className = \"container\">\r\n\t\t\t\t<button className = \"button is-small is-danger is-rounded\" onClick = {deleteTask}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t\t<input className = \"checkbox\" type = \"checkbox\"/>\r\n\r\n\t\t\t\t{props.task} \r\n\t\t\t\t<select  value = {category} type = \"select\" className = \"select is-small\" onChange = {handleChange}>\r\n\t\t\t\t\t<option>\r\n\t\t\t\t\t\tReact\r\n\t\t\t\t\t</option> \r\n\r\n\t\t\t\t\t<option>\r\n\t\t\t\t\t\tPython\r\n\t\t\t\t\t</option>\r\n\r\n\t\t\t\t\t<option>\r\n\t\t\t\t\t\tJavaScript\r\n\t\t\t\t\t</option>\r\n\r\n\t\t\t\t\t<option>\r\n\t\t\t\t\t\tNormal Task\r\n\t\t\t\t\t</option> \r\n\t\t\t\t</select>\r\n\t\t\t</li>\r\n\t\t\t<hr/>\r\n\t\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Task","import React,{useState} from 'react'\r\nimport Task from './Task'\r\n\r\nconst TaskList = (props) =>{\r\n\tconst [state,setState] = useState(false)\r\n\tvar tasks = props.tasks\r\n\r\n\r\n\tconst deleteTask = (id) =>{\r\n\t\ttasks.splice(id,1)\r\n\t\tconsole.log(props)\r\n\t\tsetState(!state)\r\n\t\tlocalStorage.setItem(\"tasks\",JSON.stringify(tasks))\r\n\t}\t\r\n\t// console.log(props.tasks)\r\n\r\n\tvar taskList = tasks.map((task,index) => <Task deleteTask = {deleteTask} key = {index} id = {index} task = {task.task} taskCategory = {task.category}/>)\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className = \"box\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{taskList}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nexport default TaskList","import React,{ useState } from 'react'\r\nimport './bulma-0.9.0/css/bulma.css'\r\nimport './main.css'\r\nimport AddTaskForm from './AddTaskForm'\r\nimport TaskList from './TaskList'\r\n\r\nconst Main = (props) =>{\r\n\r\n\tconst [tasks,setTasks] = useState([])\r\n\r\n\tvar tasksObj = [];\r\n\tconst receiveTask = (task,category) =>{\r\n\t\tlocalStorage.setItem(\"tasks\",tasksObj)\r\n\t\tif(task){\r\n\t\t\ttasksObj = [\r\n\t\t\t\t{\t\t\r\n\t\t\t\t\ttask : task,\r\n\t\t\t\t\tcategory : category\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t\t// console.log(tasksObj)\r\n\t\t\tsetTasks([...tasks,tasksObj[0]])\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\t\t\r\n\r\n\t}\r\n\r\n\r\n\t\treturn(\r\n\t\t\t<center>\r\n\t\t\t\t<h1>My Todo App</h1>\r\n\t\t\t\t<AddTaskForm sendTask = {receiveTask}/>\r\n\t\t\t\t<TaskList tasks = {tasks}/>\r\n\r\n\t\t\t</center>\r\n\t\t)\r\n}\r\n\r\nexport default Main","import Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}